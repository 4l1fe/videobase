* DONE Надо расширить таблицу Films - добавить поля kinopoisk_id (int), age_limit (smallint), kinopoisk_lastupdate (int), fDuration (int), fBudget (int)

  
* TODO Необходимо сделать робота, который будет с некоторой периодичностью проходить по таблице фильмов и подсасывать информацию с кинопоиска:

** TODO а)
*** DONE Если не установлен kinopoisk_lastupdate (=null иди 0), то подсасываются следующие данные:

*** TODO 1.
**** DONE Название фильма на русском [[file:parse_page.py::96]]
**** DONE и оригинале, [[file:parse_page.py::97]]
**** DONE бюджет,  [[file:parse_page.py::59]]
**** TODO дата премьеры (Россия, если нет - то мировая),
Проблемы с порядком
*** DONE ограничение по возрасту (число, например 6 или 12),
*** DONE длительность (в минутах)
*** DONE 2. Оценка кинопоиска
*** DONE и IMDB,
*** DONE а также кол-во проголосовавших
*** TODO 3. Жанры фильма: берутся жанры со страницы фильма из соответствующего поля, проверяется их наличие в таблице Genres (если нет, то добавляется жанр в таблицу), затем в таблицу FilmsGenres записывается соответствие айдишников. Если уже есть соответствие, то добавлять не надо.
*** DONE 4. Актёры: берётся список актёров, проверяется наличие в таблице Persons (если нет, то добавляется актёр: имя и имя на родном языке), затем в таблицу PersonsFilms записывается соответствие для каждого актёра и указывается pType = "a", в поле pCharacter заносится персонаж. Если уже есть соответствие, то добавлять не надо.
*** DONE 5. Режиссёры: по аналогии с актёрами, только в pType пишется "d", pCharacer пустой
*** DONE 6. Продюсеры: аналогично режиссёрам, pType = "p"
*** TODO 7. Подкачивается постер (если не установлен poster_id), заносится в FilmsExtras с eType = "p", затем устанавливается соответсnвующий poster_id для фильма.

*** DONE После окончания обработки фильма обновляется kinopoisk_lastupdate на текущее время (unixtime)

** TODO б) Если установлен kinpoisk_lastupdate, то раз в несколько дней (настройка через админку) необходимо обновлять только значения рейтинга kinopoisk и IMDB вместе с количеством голосов

** TODO Основные требования:

*** TODO 1. Скрипт должен полностью эмулировать браузер пользователя (отсылать агента, куки при необходимости)
*** TODO 2. Скрипт не должен делать слишком много запросов одновременно, можно ограничить количество парсинга фильмов в 10, например, за раз.


* TODO Проверить что миграция для robots проходит чисто
* TODO Проверить что краулер работает и что баги заносятся в таблицу спровоцировав еxception
* TODO Отключить дебажный режим для imdb краулера
* TODO Подумать над добавлением поля для хранения сообщения об эксепшене хотя это может быть излишне
